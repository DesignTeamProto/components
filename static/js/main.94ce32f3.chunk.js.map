{"version":3,"sources":["logo.svg","icons/search.svg","components/Forms/index.jsx","components/Input/index.jsx","components/Logo/index.jsx","components/Icon/index.jsx","components/Header/index.jsx","components/Main/index.jsx","components/Footer/index.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Form","_ref","children","react_default","a","createElement","InputStyle","styled","input","_templateObject","InputStyleIcon","_templateObject2","Input","placeholder","type","defaultProps","Logo","href","rel","src","logo","alt","IconStyle","i","Icon_templateObject","IconImage","img","Icon_templateObject2","Icon","className","image","classnames","Icons","MainHeader","header","Header_templateObject","InputStyleWrapper","div","Header_templateObject2","Header","components_Logo","Forms","components_Icon","components_Input","MainContent","main","Main_templateObject","Main","role","MainFooter","footer","Footer_templateObject","Footer","App","Fragment","components_Header","components_Main","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yNCgBzBC,EAbF,SAAAC,GAAA,IACXC,EADWD,EACXC,SADW,OAGXC,EAAAC,EAAAC,cAAA,YACGH,sdCHL,IAAMI,EAAaC,IAAOC,MAAVC,KAcVC,EAAiBH,YAAOD,EAAPC,CAAHI,KAIdC,EAAQ,SAAAX,GAAA,IACZY,EADYZ,EACZY,YAAaC,EADDb,EACCa,KADD,OAGZX,EAAAC,EAAAC,cAACK,EAAD,CAAgBI,KAAMA,EAAMD,YAAaA,KAQ3CD,EAAMG,aAAe,CACnBF,YAAa,gCACbC,KAAM,QAGOF,yBC7BAI,EANF,kBACXb,EAAAC,EAAAC,cAAA,KAAGY,KAAK,IAAIC,IAAI,QACdf,EAAAC,EAAAC,cAAA,OAAKc,IAAKC,IAAMC,IAAI,gTCCxB,IAAMC,EAAYf,IAAOgB,EAAVC,KAKTC,EAAYlB,IAAOmB,IAAVC,KAOTC,EAAO,SAAA3B,GAAA,IAAG4B,EAAH5B,EAAG4B,UAAWC,EAAd7B,EAAc6B,MAAd,OACX3B,EAAAC,EAAAC,cAACiB,EAAD,CAAWO,UAAWE,IAAWF,IAC/B1B,EAAAC,EAAAC,cAACoB,EAAD,CAAWN,IAAKW,EAAOT,IAAI,kBAY/BO,EAAKb,aAAe,CAClBc,UAAW,OACXC,MAAOE,KAGMJ,maC9Bf,IAAMK,EAAa1B,IAAO2B,OAAVC,KAWVC,EAAoB7B,IAAO8B,IAAVC,KAuBRC,EAjBA,kBACbpC,EAAAC,EAAAC,cAAC4B,EAAD,KACE9B,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAACoC,EAAD,KACEtC,EAAAC,EAAAC,cAAC+B,EAAD,KACEjC,EAAAC,EAAAC,cAACqC,EAAD,CACEb,UAAU,SAEZ1B,EAAAC,EAAAC,cAACsC,EAAD,CACE7B,KAAK,OACLD,YAAY,0MC/BtB,IAAM+B,EAAcrC,IAAOsC,KAAVC,KAaFC,EANF,kBACX5C,EAAAC,EAAAC,cAACuC,EAAD,CAAaI,KAAK,QAAlB,+KCRF,IAAMC,EAAa1C,IAAO2C,OAAVC,KAaDC,EANA,kBACbjD,EAAAC,EAAAC,cAAC4C,EAAD,gBCKaI,MAVf,WACE,OACElD,EAAAC,EAAAC,cAACF,EAAAC,EAAMkD,SAAP,KACEnD,EAAAC,EAAAC,cAACkD,EAAD,MACApD,EAAAC,EAAAC,cAACmD,EAAD,MACArD,EAAAC,EAAAC,cAACoD,EAAD,QCDcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO7D,EAAAC,EAAAC,cAAC4D,EAAD,MAASC,SAASC,eAAe,aDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.94ce32f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.76c52d50.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.3b76ec12.svg\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Form = ({\n  children,\n}) => (\n  <form>\n    {children}\n  </form>\n);\n\nForm.propTypes = {\n  /** Button label */\n  children: PropTypes.element.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst InputStyle = styled.input`\n  outline: none;\n  border: none;\n  border-radius: 0.2rem;\n  width: 71rem;\n  background-color: transparent;\n  box-shadow: 0 0.2rem 0.3rem 0 rgba(39, 39, 39, 0.21);\n  height: 4.2rem;\n  padding: 1rem;\n  color: rgba(255,255,255,0.7);\n  font-family: 'Roboto', sans-serif;\n  font-size: 1.4rem;\n`;\n\nconst InputStyleIcon = styled(InputStyle)`\n  padding-left: 0.5rem;\n`;\n\nconst Input = ({\n  placeholder, type,\n}) => (\n  <InputStyleIcon type={type} placeholder={placeholder} />\n);\n\nInput.propTypes = {\n  placeholder: PropTypes.string,\n  type: PropTypes.string,\n};\n\nInput.defaultProps = {\n  placeholder: 'Zoek naar klanten en relaties',\n  type: 'text',\n};\n\nexport default Input;\n","import React from 'react';\nimport logo from '../../logo.svg';\n\nconst Logo = () => (\n  <a href=\"/\" rel=\"home\">\n    <img src={logo} alt=\"Main product logo\" />\n  </a>\n);\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport styled from 'styled-components';\nimport Icons from '../../icons/search.svg';\n\nconst IconStyle = styled.i`\n  color: #fff;\n  padding: 1rem;\n`;\n\nconst IconImage = styled.img`\n  color: #fff;\n  opacity: 0.6;\n  height: 1.5rem;\n  width: 1.5rem;\n`;\n\nconst Icon = ({ className, image }) => (\n  <IconStyle className={classnames(className)}>\n    <IconImage src={image} alt=\"search icon\" />\n  </IconStyle>\n);\n\nIcon.propTypes = {\n  /** Icon className */\n  className: PropTypes.string,\n\n  /** Icon image */\n  image: PropTypes.string,\n};\n\nIcon.defaultProps = {\n  className: 'icon',\n  image: Icons,\n};\n\nexport default Icon;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Form from '../Forms';\nimport Input from '../Input';\nimport Logo from '../Logo';\nimport Icon from '../Icon';\n\nconst MainHeader = styled.header`\n  background: red;\n  grid-area: header;\n  background-color: #001134;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 1.4rem;\n  height: 7rem;\n`;\n\nconst InputStyleWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.1);\n`;\n\nconst Header = () => (\n  <MainHeader>\n    <Logo />\n    <Form>\n      <InputStyleWrapper>\n        <Icon\n          className=\"test\"\n        />\n        <Input\n          type=\"text\"\n          placeholder=\"Zoek naar klanten en relaties\"\n        />\n      </InputStyleWrapper>\n    </Form>\n  </MainHeader>\n);\n\nexport default Header;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MainContent = styled.main`\n  grid-area: main;\n  background-color: #fff;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Main = () => (\n  <MainContent role=\"main\">\n    Main\n  </MainContent>\n);\n\nexport default Main;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst MainFooter = styled.footer`\n  grid-area: footer;\n  background-color: #000;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Footer = () => (\n  <MainFooter>\n    Footer\n  </MainFooter>\n);\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header';\nimport Main from './components/Main';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Header />\n      <Main />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('rsg-root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}